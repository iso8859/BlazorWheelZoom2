@page "/"
<h1>BlazorWheelZoom2 demo</h1>
<p>You can zoom using wheel button.</p>
<p>You can scroll using the left button.</p>
<p>You can draw rectangle using right button.</p>

<div class="center">
    <BlazorWheelZoom2.WheelZoom2 @ref="ctrlRef" 
                                 ImageUri="/mire.png" 
                                 Width="500px" 
                                 Height="500px" 
                                 RectangleList="rectangles" 
                                 NewRectangle="(r)=>rectangles.Add(r)"
                                 ContextChanged="(c)=> { lastContext = c; StateHasChanged(); }"
                                 />
</div>
<div>
    <button @onclick="()=>Red()">Add red rectangle</button>
    <button @onclick="()=>InView()">First rectangle in view</button>
    <button @onclick="()=>ChangeImage()">Change image</button>
</div>
<p>Context</p>
@if (lastContext != null)
{
    <p>@(lastContext.ToString())</p>
}
<p>Rectangle list</p>
<ul>
    @foreach (var rect in rectangles)
    {
        <li>@(rect)</li>
    }
</ul>
@code
{
    // Image credit https://unsplash.com/photos/_rHplGon_uU

    BlazorWheelZoom2.WheelZoom2 ctrlRef;
    BlazorSimpleSVG.SVGContext lastContext;

    List<BlazorSimpleSVG.SVGRectangle> rectangles = new List<BlazorSimpleSVG.SVGRectangle>();
    void Red()
    {
        rectangles.Add(new BlazorSimpleSVG.SVGRectangle() { rect = new BlazorSimpleSVG.Rect(600, 600, 700, 700), scrollIntoView = true, fill = "#FF0000" });
    }

    void InView()
    {
        if (rectangles.Count > 0)
            rectangles[0].scrollIntoView = true;
    }

    Task ChangeImage()
    {
        return ctrlRef.RefreshAsync("/unsplash.com_photos__rHplGon_uU.jpg");
    }
}